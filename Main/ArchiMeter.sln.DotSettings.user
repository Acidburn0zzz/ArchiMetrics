<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/CodeInspection/Highlighting/AnalysisEnabled/@EntryValue">SOLUTION</s:String>
	<s:Boolean x:Key="/Default/Environment/SearchAndNavigation/MergeOccurences/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/Housekeeping/UnitTestingMru/UnitTestSessionPersistentData/=E37ED93A946548F6B9C24AD67E029A18/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/Housekeeping/UnitTestingMru/UnitTestSessionPersistentData/=E37ED93A946548F6B9C24AD67E029A18/Name/@EntryValue">CanSerializeProjectSettings</s:String>
	<s:String x:Key="/Default/Housekeeping/UnitTestingMru/UnitTestSessionPersistentData/=E37ED93A946548F6B9C24AD67E029A18/XmlSerializedElements/@EntryValue">&lt;Session&gt;&lt;Elements&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.CodeErrorIndexTests" type="NUnitTestFixtureElement" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.CodeReviewIndexTests" type="NUnitTestFixtureElement" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer" type="NUnitTestFixtureElement" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.DefinedRulesTests" type="NUnitTestFixtureElement" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Analysis.Tests.DependencyAnalyzerTests" type="NUnitTestFixtureElement" Project="36BA2848-F241-4CAA-B037-451251A75951" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Reports.Tests.EffortCalculationTests" type="NUnitTestFixtureElement" Project="5BBE7D49-CA3B-435B-A2AF-73725AE0226E" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.ErrorDataIndexTests" type="NUnitTestFixtureElement" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Analysis.Tests.LocCounterTests" type="NUnitTestFixtureElement" Project="36BA2848-F241-4CAA-B037-451251A75951" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.NamespaceMetricConverterTests" type="NUnitTestFixtureElement" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.ProjectDataComparerTests+GivenAProjectDataComparer" type="NUnitTestFixtureElement" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator" type="NUnitTestFixtureElement" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Reports.Tests.ProjectSettingsTests" type="NUnitTestFixtureElement" Project="5BBE7D49-CA3B-435B-A2AF-73725AE0226E" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Analysis.Tests.RequirementToTestAnalyzerTests" type="NUnitTestFixtureElement" Project="36BA2848-F241-4CAA-B037-451251A75951" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.StatementsAnalyzerTests+GivenAStatementsAnalyzer" type="NUnitTestFixtureElement" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode" type="NUnitTestFixtureElement" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingNonBrokenCode" type="NUnitTestFixtureElement" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests" type="NUnitTestFixtureElement" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsMemberComplexitySigmaIndexTests" type="NUnitTestFixtureElement" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsMemberMaintainabilitySigmaIndexTests" type="NUnitTestFixtureElement" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsMemberSizeSigmaIndexTests" type="NUnitTestFixtureElement" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsProjectMetricsIndexTests" type="NUnitTestFixtureElement" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsTypeComplexitySigmaIndexTests" type="NUnitTestFixtureElement" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsTypeMaintainabilitySigmaIndexTests" type="NUnitTestFixtureElement" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsTypeSizeDistributionIndexTests" type="NUnitTestFixtureElement" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsTypeSizeSigmaIndexTests" type="NUnitTestFixtureElement" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsWeightedProjectMetricsIndexTests" type="NUnitTestFixtureElement" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.TypeCouplingConverterTests" type="NUnitTestFixtureElement" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.TypeMetricConverterTests" type="NUnitTestFixtureElement" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Analysis.Tests.Xaml.XamlConverterTests" type="NUnitTestFixtureElement" Project="36BA2848-F241-4CAA-B037-451251A75951" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Common.Tests.Xaml.XamlNodeTests+GivenAXamlSnippet" type="NUnitTestFixtureElement" Project="7ECF133B-9576-4385-81DA-20C5732A29B3" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Reports.Tests.EffortCalculationTests.CalculatesExpectedEffort" ParentId="ArchiMeter.Reports.Tests.EffortCalculationTests" type="NUnitTestElement" TypeName="ArchiMeter.Reports.Tests.EffortCalculationTests" MethodName="CalculatesExpectedEffort" Project="5BBE7D49-CA3B-435B-A2AF-73725AE0226E" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CanCalculateMetricsForSilverlightProject" ParentId="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator" type="NUnitTestElement" TypeName="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator" MethodName="CanCalculateMetricsForSilverlightProject" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.NamespaceMetricConverterTests.CanConvertNamespaceMetrics" ParentId="ArchiMeter.Raven.Tests.NamespaceMetricConverterTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.NamespaceMetricConverterTests" MethodName="CanConvertNamespaceMetrics" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.TypeCouplingConverterTests.CanConvertTypeCouplings" ParentId="ArchiMeter.Raven.Tests.TypeCouplingConverterTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.TypeCouplingConverterTests" MethodName="CanConvertTypeCouplings" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.TypeMetricConverterTests.CanConvertTypeMetrics" ParentId="ArchiMeter.Raven.Tests.TypeMetricConverterTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.TypeMetricConverterTests" MethodName="CanConvertTypeMetrics" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Analysis.Tests.LocCounterTests.CanCountSyntax" ParentId="ArchiMeter.Analysis.Tests.LocCounterTests" type="NUnitTestElement" TypeName="ArchiMeter.Analysis.Tests.LocCounterTests" MethodName="CanCountSyntax" Project="36BA2848-F241-4CAA-B037-451251A75951" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Analysis.Tests.DependencyAnalyzerTests.CanCreateDirectDepencyChain" ParentId="ArchiMeter.Analysis.Tests.DependencyAnalyzerTests" type="NUnitTestElement" TypeName="ArchiMeter.Analysis.Tests.DependencyAnalyzerTests" MethodName="CanCreateDirectDepencyChain" Project="36BA2848-F241-4CAA-B037-451251A75951" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Analysis.Tests.DependencyAnalyzerTests.CanCreateMultipleNonDirectDepencyChain" ParentId="ArchiMeter.Analysis.Tests.DependencyAnalyzerTests" type="NUnitTestElement" TypeName="ArchiMeter.Analysis.Tests.DependencyAnalyzerTests" MethodName="CanCreateMultipleNonDirectDepencyChain" Project="36BA2848-F241-4CAA-B037-451251A75951" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Analysis.Tests.DependencyAnalyzerTests.CanCreateNonDirectDepencyChain" ParentId="ArchiMeter.Analysis.Tests.DependencyAnalyzerTests" type="NUnitTestElement" TypeName="ArchiMeter.Analysis.Tests.DependencyAnalyzerTests" MethodName="CanCreateNonDirectDepencyChain" Project="36BA2848-F241-4CAA-B037-451251A75951" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.TypeMetricConverterTests.CanDeserializeInstance" ParentId="ArchiMeter.Raven.Tests.TypeMetricConverterTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.TypeMetricConverterTests" MethodName="CanDeserializeInstance" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.TypeCouplingConverterTests.CanDeserializeInstance" ParentId="ArchiMeter.Raven.Tests.TypeCouplingConverterTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.TypeCouplingConverterTests" MethodName="CanDeserializeInstance" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.NamespaceMetricConverterTests.CanDeserializeInstance" ParentId="ArchiMeter.Raven.Tests.NamespaceMetricConverterTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.NamespaceMetricConverterTests" MethodName="CanDeserializeInstance" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.DefinedRulesTests.CanGetDefinedRules" ParentId="ArchiMeter.CodeReview.Tests.DefinedRulesTests" type="NUnitTestElement" TypeName="ArchiMeter.CodeReview.Tests.DefinedRulesTests" MethodName="CanGetDefinedRules" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests.CanGetHalsteadMetricsForArbitrarySnippet" ParentId="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests" type="NUnitTestElement" TypeName="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests" MethodName="CanGetHalsteadMetricsForArbitrarySnippet" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests.CanGetHalsteadMetricsForClassSnippet" ParentId="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests" type="NUnitTestElement" TypeName="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests" MethodName="CanGetHalsteadMetricsForClassSnippet" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests.CanGetHalsteadMetricsForMethodSnippet" ParentId="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests" type="NUnitTestElement" TypeName="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests" MethodName="CanGetHalsteadMetricsForMethodSnippet" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests.CanGetHalsteadMetricsForMultipleArbitrarySnippets" ParentId="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests" type="NUnitTestElement" TypeName="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests" MethodName="CanGetHalsteadMetricsForMultipleArbitrarySnippets" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Common.Tests.Xaml.XamlNodeTests+GivenAXamlSnippet.CanParseXaml" ParentId="ArchiMeter.Common.Tests.Xaml.XamlNodeTests+GivenAXamlSnippet" type="NUnitTestElement" TypeName="ArchiMeter.Common.Tests.Xaml.XamlNodeTests+GivenAXamlSnippet" MethodName="CanParseXaml" Project="7ECF133B-9576-4385-81DA-20C5732A29B3" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Analysis.Tests.RequirementToTestAnalyzerTests.CanResolveRequirementIdsInAttribute" ParentId="ArchiMeter.Analysis.Tests.RequirementToTestAnalyzerTests" type="NUnitTestElement" TypeName="ArchiMeter.Analysis.Tests.RequirementToTestAnalyzerTests" MethodName="CanResolveRequirementIdsInAttribute" Project="36BA2848-F241-4CAA-B037-451251A75951" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Analysis.Tests.RequirementToTestAnalyzerTests.CanResolveTestForRequirementIds" ParentId="ArchiMeter.Analysis.Tests.RequirementToTestAnalyzerTests" type="NUnitTestElement" TypeName="ArchiMeter.Analysis.Tests.RequirementToTestAnalyzerTests" MethodName="CanResolveTestForRequirementIds" Project="36BA2848-F241-4CAA-B037-451251A75951" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.NamespaceMetricConverterTests.CanSerializeInstance" ParentId="ArchiMeter.Raven.Tests.NamespaceMetricConverterTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.NamespaceMetricConverterTests" MethodName="CanSerializeInstance" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.TypeMetricConverterTests.CanSerializeInstance" ParentId="ArchiMeter.Raven.Tests.TypeMetricConverterTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.TypeMetricConverterTests" MethodName="CanSerializeInstance" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.TypeCouplingConverterTests.CanSerializeInstance" ParentId="ArchiMeter.Raven.Tests.TypeCouplingConverterTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.TypeCouplingConverterTests" MethodName="CanSerializeInstance" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Reports.Tests.ProjectSettingsTests.CanSerializeProjectSettings" ParentId="ArchiMeter.Reports.Tests.ProjectSettingsTests" type="NUnitTestElement" TypeName="ArchiMeter.Reports.Tests.ProjectSettingsTests" MethodName="CanSerializeProjectSettings" Project="5BBE7D49-CA3B-435B-A2AF-73725AE0226E" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Analysis.Tests.RequirementToTestAnalyzerTests.CanWriteReport" ParentId="ArchiMeter.Analysis.Tests.RequirementToTestAnalyzerTests" type="NUnitTestElement" TypeName="ArchiMeter.Analysis.Tests.RequirementToTestAnalyzerTests" MethodName="CanWriteReport" Project="36BA2848-F241-4CAA-B037-451251A75951" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests.CodeHasEffort" ParentId="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests" type="NUnitTestElement" TypeName="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests" MethodName="CodeHasEffort" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CodeHasExpectedLinesOfCode" ParentId="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator" type="NUnitTestElement" TypeName="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator" MethodName="CodeHasExpectedLinesOfCode" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity" ParentId="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer" type="NUnitTestElement" TypeName="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer" MethodName="MethodHasExpectedComplexity" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingNonBrokenCode.NegativeTest" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingNonBrokenCode" type="NUnitTestElement" TypeName="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingNonBrokenCode" MethodName="NegativeTest" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.CodeErrorIndexTests.PerformsGroupingOnSingleProject" ParentId="ArchiMeter.Raven.Tests.Indexes.CodeErrorIndexTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.Indexes.CodeErrorIndexTests" MethodName="PerformsGroupingOnSingleProject" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.ErrorDataIndexTests.PerformsGroupingOnSingleProject" ParentId="ArchiMeter.Raven.Tests.Indexes.ErrorDataIndexTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.Indexes.ErrorDataIndexTests" MethodName="PerformsGroupingOnSingleProject" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.ErrorDataIndexTests.PerformsGroupingOnTwoProjects" ParentId="ArchiMeter.Raven.Tests.Indexes.ErrorDataIndexTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.Indexes.ErrorDataIndexTests" MethodName="PerformsGroupingOnTwoProjects" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.CodeErrorIndexTests.PerformsGroupingOnTwoProjects" ParentId="ArchiMeter.Raven.Tests.Indexes.CodeErrorIndexTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.Indexes.CodeErrorIndexTests" MethodName="PerformsGroupingOnTwoProjects" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode" type="NUnitTestElement" TypeName="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode" MethodName="SyntaxDetectionTest" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.WhenClassDefinitionHasEmptyConstructorThenHasCyclomaticComplexityOfOne" ParentId="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator" type="NUnitTestElement" TypeName="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator" MethodName="WhenClassDefinitionHasEmptyConstructorThenHasCyclomaticComplexityOfOne" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.WhenClassDefinitionIsEmptyThenHasCyclomaticComplexityOfOne" ParentId="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator" type="NUnitTestElement" TypeName="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator" MethodName="WhenClassDefinitionIsEmptyThenHasCyclomaticComplexityOfOne" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.ProjectDataComparerTests+GivenAProjectDataComparer.WhenComparingHashCodesThenEqualProjectsHaveEqualHashCodes" ParentId="ArchiMeter.CodeReview.Tests.ProjectDataComparerTests+GivenAProjectDataComparer" type="NUnitTestElement" TypeName="ArchiMeter.CodeReview.Tests.ProjectDataComparerTests+GivenAProjectDataComparer" MethodName="WhenComparingHashCodesThenEqualProjectsHaveEqualHashCodes" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.ProjectDataComparerTests+GivenAProjectDataComparer.WhenComparingTwoProjectsWithSameFilePathThenProjectAreEqual" ParentId="ArchiMeter.CodeReview.Tests.ProjectDataComparerTests+GivenAProjectDataComparer" type="NUnitTestElement" TypeName="ArchiMeter.CodeReview.Tests.ProjectDataComparerTests+GivenAProjectDataComparer" MethodName="WhenComparingTwoProjectsWithSameFilePathThenProjectAreEqual" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Analysis.Tests.Xaml.XamlConverterTests.WhenConvertingComplexXamlSnippetThenGeneratesCode" ParentId="ArchiMeter.Analysis.Tests.Xaml.XamlConverterTests" type="NUnitTestElement" TypeName="ArchiMeter.Analysis.Tests.Xaml.XamlConverterTests" MethodName="WhenConvertingComplexXamlSnippetThenGeneratesCode" Project="36BA2848-F241-4CAA-B037-451251A75951" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Analysis.Tests.Xaml.XamlConverterTests.WhenConvertingXamlSnippetThenCanCompileCode" ParentId="ArchiMeter.Analysis.Tests.Xaml.XamlConverterTests" type="NUnitTestElement" TypeName="ArchiMeter.Analysis.Tests.Xaml.XamlConverterTests" MethodName="WhenConvertingXamlSnippetThenCanCompileCode" Project="36BA2848-F241-4CAA-B037-451251A75951" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Analysis.Tests.Xaml.XamlConverterTests.WhenConvertingXamlSnippetThenGeneratesCode" ParentId="ArchiMeter.Analysis.Tests.Xaml.XamlConverterTests" type="NUnitTestElement" TypeName="ArchiMeter.Analysis.Tests.Xaml.XamlConverterTests" MethodName="WhenConvertingXamlSnippetThenGeneratesCode" Project="36BA2848-F241-4CAA-B037-451251A75951" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.TypeMetricConverterTests.WhenDeserializingInstanceThenClassCouplingsHaveNamespace" ParentId="ArchiMeter.Raven.Tests.TypeMetricConverterTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.TypeMetricConverterTests" MethodName="WhenDeserializingInstanceThenClassCouplingsHaveNamespace" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Analysis.Tests.Xaml.XamlConverterTests.WhenLoadingProjectThenCanAccessXaml" ParentId="ArchiMeter.Analysis.Tests.Xaml.XamlConverterTests" type="NUnitTestElement" TypeName="ArchiMeter.Analysis.Tests.Xaml.XamlConverterTests" MethodName="WhenLoadingProjectThenCanAccessXaml" Project="36BA2848-F241-4CAA-B037-451251A75951" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Analysis.Tests.RequirementToTestAnalyzerTests.WhenNoRequirementIsSpecifiedThenTestIsIncludedInReport" ParentId="ArchiMeter.Analysis.Tests.RequirementToTestAnalyzerTests" type="NUnitTestElement" TypeName="ArchiMeter.Analysis.Tests.RequirementToTestAnalyzerTests" MethodName="WhenNoRequirementIsSpecifiedThenTestIsIncludedInReport" Project="36BA2848-F241-4CAA-B037-451251A75951" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.StatementsAnalyzerTests+GivenAStatementsAnalyzer.WhenOnlyAssigningConstThenHasZeroLinesOfCode" ParentId="ArchiMeter.CodeReview.Tests.Metrics.StatementsAnalyzerTests+GivenAStatementsAnalyzer" type="NUnitTestElement" TypeName="ArchiMeter.CodeReview.Tests.Metrics.StatementsAnalyzerTests+GivenAStatementsAnalyzer" MethodName="WhenOnlyAssigningConstThenHasZeroLinesOfCode" Project="E1C949E2-B71A-4574-8D9F-0678805301E7" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.CodeReviewIndexTests.WhenReducingThenCreatesGroupedData" ParentId="ArchiMeter.Raven.Tests.Indexes.CodeReviewIndexTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.Indexes.CodeReviewIndexTests" MethodName="WhenReducingThenCreatesGroupedData" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsProjectMetricsIndexTests.WhenReducingThenCreatesGroupedData" ParentId="ArchiMeter.Raven.Tests.Indexes.TfsProjectMetricsIndexTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.Indexes.TfsProjectMetricsIndexTests" MethodName="WhenReducingThenCreatesGroupedData" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsTypeSizeSigmaIndexTests.WhenReducingThenCreatesGroupedData" ParentId="ArchiMeter.Raven.Tests.Indexes.TfsTypeSizeSigmaIndexTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.Indexes.TfsTypeSizeSigmaIndexTests" MethodName="WhenReducingThenCreatesGroupedData" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsTypeSizeDistributionIndexTests.WhenReducingThenCreatesGroupedData" ParentId="ArchiMeter.Raven.Tests.Indexes.TfsTypeSizeDistributionIndexTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.Indexes.TfsTypeSizeDistributionIndexTests" MethodName="WhenReducingThenCreatesGroupedData" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsTypeMaintainabilitySigmaIndexTests.WhenReducingThenCreatesGroupedData" ParentId="ArchiMeter.Raven.Tests.Indexes.TfsTypeMaintainabilitySigmaIndexTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.Indexes.TfsTypeMaintainabilitySigmaIndexTests" MethodName="WhenReducingThenCreatesGroupedData" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsMemberMaintainabilitySigmaIndexTests.WhenReducingThenCreatesGroupedData" ParentId="ArchiMeter.Raven.Tests.Indexes.TfsMemberMaintainabilitySigmaIndexTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.Indexes.TfsMemberMaintainabilitySigmaIndexTests" MethodName="WhenReducingThenCreatesGroupedData" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsWeightedProjectMetricsIndexTests.WhenReducingThenCreatesGroupedData" ParentId="ArchiMeter.Raven.Tests.Indexes.TfsWeightedProjectMetricsIndexTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.Indexes.TfsWeightedProjectMetricsIndexTests" MethodName="WhenReducingThenCreatesGroupedData" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsMemberComplexitySigmaIndexTests.WhenReducingThenCreatesGroupedData" ParentId="ArchiMeter.Raven.Tests.Indexes.TfsMemberComplexitySigmaIndexTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.Indexes.TfsMemberComplexitySigmaIndexTests" MethodName="WhenReducingThenCreatesGroupedData" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsTypeComplexitySigmaIndexTests.WhenReducingThenCreatesGroupedData" ParentId="ArchiMeter.Raven.Tests.Indexes.TfsTypeComplexitySigmaIndexTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.Indexes.TfsTypeComplexitySigmaIndexTests" MethodName="WhenReducingThenCreatesGroupedData" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.Raven.Tests.Indexes.TfsMemberSizeSigmaIndexTests.WhenReducingThenCreatesGroupedData" ParentId="ArchiMeter.Raven.Tests.Indexes.TfsMemberSizeSigmaIndexTests" type="NUnitTestElement" TypeName="ArchiMeter.Raven.Tests.Indexes.TfsMemberSizeSigmaIndexTests" MethodName="WhenReducingThenCreatesGroupedData" Project="3DC99AC9-0329-4AE7-AE68-D93C9771E17C" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests.CodeHasEffort(&amp;quot;public class Something { \r\npublic int Number { get{ return a - b; } }\r\npublic string GetValue() { return \&amp;quot;x\&amp;quot; + a; } \r\n}&amp;quot;)" ParentId="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests.CodeHasEffort" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests.CodeHasEffort(&amp;quot;return \&amp;quot;x\&amp;quot;;&amp;quot;)" ParentId="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests.CodeHasEffort" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests.CodeHasEffort(&amp;quot;var a = \&amp;quot;x\&amp;quot;; return a;&amp;quot;)" ParentId="ArchiMeter.CodeReview.Tests.SyntaxMetricsCalculatorTests.CodeHasEffort" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CodeHasExpectedLinesOfCode(&amp;quot;namespace Testing\r\n\t\t\t{\r\n\t\t\t\tpublic class TestClass {\r\n\t\t\t\t\tpublic TestClass()\r\n\t\t\t: base(SyntaxWalkerDepth.Node)\r\n\t\t{\r\n\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}&amp;quot;,1)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CodeHasExpectedLinesOfCode" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CodeHasExpectedLinesOfCode(&amp;quot;namespace Testing\r\n\t\t\t{\r\n\t\t\t\tpublic class TestClass {\r\n\t\t\t\t\tpublic TestClass()\r\n\t\t{\r\n\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}&amp;quot;,1)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CodeHasExpectedLinesOfCode" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CodeHasExpectedLinesOfCode(&amp;quot;namespace Testing\r\n\t\t\t{\r\n\t\t\t\tpublic class TestClass {\r\n\t\t\t\t\tpublic void SomeMethod() {\r\n\t\t\t\t\t\t{}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}&amp;quot;,1)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CodeHasExpectedLinesOfCode" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CodeHasExpectedLinesOfCode(&amp;quot;namespace Testing\r\n\t\t\t{\r\n\t\t\t\tpublic class TestClass {\r\n\t\t\t\t\tpublic void SomeMethod() {\r\n\t\t\t\t\t\tconst string x = \&amp;quot;blah\&amp;quot;;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}&amp;quot;,1)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CodeHasExpectedLinesOfCode" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CodeHasExpectedLinesOfCode(&amp;quot;namespace Testing\r\n\t\t\t{\r\n\t\t\t\tpublic class TestClass {\r\n\t\t\t\t\tpublic void SomeMethod() {\r\n\t\t\t\t\t\tforeach(var a in x){}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}&amp;quot;,2)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CodeHasExpectedLinesOfCode" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CodeHasExpectedLinesOfCode(&amp;quot;namespace Testing\r\n\t\t\t{\r\n\t\t\t\tpublic class TestClass {\r\n\t\t\t\t\tpublic void SomeMethod() {\r\n\t\t\t\t\t\tvar x = a + b;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}&amp;quot;,2)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CodeHasExpectedLinesOfCode" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CodeHasExpectedLinesOfCode(&amp;quot;namespace Testing\r\n\t\t\t{\r\n\t\t\t\tpublic class TestClass {\r\n\t\t\t\t\tpublic void SomeMethod(SyntaxNode node)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbase.VisitBinaryExpression(node);\r\n\t\t\t\t\t\tswitch (node.Kind)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcase SyntaxKind.LogicalNotExpression:\r\n\t\t\t\t\t\t\t\t_counter++;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase SyntaxKind.ExclusiveOrExpression:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}&amp;quot;,4)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CodeHasExpectedLinesOfCode" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CodeHasExpectedLinesOfCode(&amp;quot;namespace Testing\r\n\t\t\t{\r\n\t\t\t\tusing System;\r\nusing System.Linq;\r\n\t\t\t}&amp;quot;,0)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.ProjectMetricsCalculatorTests+GivenAProjectMetricsCalculator.CodeHasExpectedLinesOfCode" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity(&amp;quot;public abstract void DoSomething();&amp;quot;,1)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity(&amp;quot;public int DoSomething(){\r\n\t\tvar numbers = new[] { 1, 2, 3 };\r\n\t\tvar odds = numbers.Where(n =&amp;gt; n != 1).ToArray();\r\n\t}\r\n}&amp;quot;,1)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity(&amp;quot;public int DoSomething(){\r\n\tswitch(x){\r\n\t\tcase \&amp;quot;a\&amp;quot;: return 1;\r\n\t\tcase \&amp;quot;b\&amp;quot;: return 2;\r\n\t\tdefault: return 0;\r\n\t}\r\n}&amp;quot;,3)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity(&amp;quot;public int DoSomething(){\r\n\tvar x = a ?? new object();\r\n\t}\r\n}&amp;quot;,2)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity(&amp;quot;public int DoSomething(){\r\n\tvar x = a &amp;gt; 2 ? 1 : 0;\r\n\t}\r\n}&amp;quot;,2)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity(&amp;quot;public void DoSomething(){\r\n\tif(x == 1)\r\n\t{\r\n\t\tvar y = x + 2;\r\n\t}\r\n\telse\r\n\t{\t\t\r\n\t\tvar y = 1 + 2;\r\n\t}\r\n}&amp;quot;,2)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity(&amp;quot;public void DoSomething(){\r\n\ttry\r\n\t{\r\n\t\tvar x = 1 + 2;\r\n\t\tvar y = x + 2;\r\n\t}\r\n\tcatch(ArgumentNullException ane)\r\n\t{\r\n\t\tthrow new Exception();\r\n\t}\r\n\tcatch(OutOfRangeException ane)\r\n\t{\r\n\t\tthrow new Exception();\r\n\t}\r\n}&amp;quot;,3)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity(&amp;quot;public void DoSomething(){\r\n\ttry\r\n\t{\r\n\t\tvar x = 1 + 2;\r\n\t\tvar y = x + 2;\r\n\t}\r\n\tcatch\r\n\t{\r\n\t\tthrow new Exception();\r\n\t}\r\n}&amp;quot;,2)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity(&amp;quot;void DoSomething();&amp;quot;,1)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity(&amp;quot;void DoSomething(){ var x = a &amp;amp;&amp;amp; b; }&amp;quot;,2)" ParentId="ArchiMeter.CodeReview.Tests.Metrics.CyclomaticComplexityAnalyzerTests+GivenACyclomaticComplexityAnalyzer.MethodHasExpectedComplexity" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingNonBrokenCode.NegativeTest(&amp;quot;public abstract void DoSomething();&amp;quot;,ArchiMeter.CodeReview.Rules.TooHighCyclomaticComplexityRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingNonBrokenCode.NegativeTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingNonBrokenCode.NegativeTest(&amp;quot;public class InnerClass : ICustomInterface\r\n\t\t{\r\n\t\t\tprivate void SomeMethod()\r\n\t\t\t{\r\n\t\t\t\tdo\r\n\t\t\t\t{\r\n\t\t\t\t\tAnotherMethod();\r\n\t\t\t\t}\r\n\t\t\t\twhile(true);\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.EmptyDoErrorRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingNonBrokenCode.NegativeTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingNonBrokenCode.NegativeTest(&amp;quot;public class InnerClass : ICustomInterface\r\n\t\t{\r\n\t\t\tprivate void SomeMethod()\r\n\t\t\t{\r\n\t\t\t\tdo\r\n\t\t\t\t{\r\n\t\t\t\t}\r\n\t\t\t\twhile(true);\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.DoLoopSleepErrorRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingNonBrokenCode.NegativeTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingNonBrokenCode.NegativeTest(&amp;quot;public class InnerClass : ICustomInterface\r\n\t\t{\r\n\t\t\tprivate void SomeMethod()\r\n\t\t\t{\r\n\t\t\t\tvar x = 1;\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.TypeObfuscationRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingNonBrokenCode.NegativeTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingNonBrokenCode.NegativeTest(&amp;quot;public class InnerClass : ICustomInterface\r\n\t\t{\r\n\t\t\tprivate void SomeMethod()\r\n\t\t\t{\r\n\t\t\t\tvar x = new object();\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.VarDeclarationForNewVariableErrorRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingNonBrokenCode.NegativeTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingNonBrokenCode.NegativeTest(&amp;quot;public class InnerClass : ICustomInterface\r\n\t\t{\r\n\t\t\tprivate void SomeMethod()\r\n\t\t\t{\r\n\t\t\t\twhile(true)\r\n\t\t\t\t{\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.WhileLoopSleepErrorRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingNonBrokenCode.NegativeTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;[TestMethod]\r\n[ExpectedException(typeof(Exception))]\r\nprivate void SomeMethod()\r\n        {\r\n\t\t\t// A comment\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.EmptyTestRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;[TestMethod]\r\n[ExpectedException(typeof(Exception))]\r\nprivate void SomeMethod()\r\n        {\r\n\t\t\tAssert.IsTrue(true);\r\n\t\t\tthrow new Exception();\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.MultipleAssertsInTestErrorRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;[TestMethod]\r\n[ExpectedException(typeof(Exception))]\r\nprivate void SomeMethod()\r\n        {\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.EmptyTestRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;[TestMethod]\r\nprivate void SomeMethod()\r\n        {\r\n\t\t\tAssert.IsTrue(true);\r\n\t\t\tAssert.IsFalse(false);\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.MultipleAssertsInTestErrorRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;[TestMethod]\r\nprivate void SomeMethod()\r\n        {\r\n\t\t\tsomeMock.Verify(x =&amp;gt; x(a), Times.Once());\r\n\t\t\tanotherMock.Verify(x =&amp;gt; x(a), Times.Once());\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.MultipleAssertsInTestErrorRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;[TestMethod]\r\nprivate void SomeMethod()\r\n        {\r\n\t\t\tvar value = ServiceLocator.Current.Resolve&amp;lt;IMarkerInterface&amp;gt;();\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.ServiceLocatorInvocationInTestRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void ApplicationInitializationStartup()\r\n        {\r\n            if (applicationInitTask == null)\r\n            {\r\n\t\t\t\tapplicationInitTask = Task.Factory.StartNew(() =&amp;gt; SingleApplicationHostControl.Instance);\r\n\t\t\t\tapplicationInitTask.Wait();\r\n\r\n                applicationStartupTask = Task.Factory.StartNew(() =&amp;gt; SingleApplicationHostControl.Instance.StartupApplicationHost());\r\n                applicationStartupTask.Wait();\r\n            }\r\n        }&amp;quot;,ArchiMeter.CodeReview.Rules.ImmediateTaskWaitRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void SomeMethod()\r\n        {\r\n\t\t\tactivity.ArchiveSettings.NetworkLocation = @\&amp;quot;c:\\\&amp;quot;;\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.DiskLocationDependencyRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void SomeMethod()\r\n        {\r\n\t\t\tdo\r\n\t\t\t{\r\n\t\t\t\tif (DateTime.UtcNow.Millisecond == 500)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tThread.Sleep(100);\r\n\t\t\t}\r\n\t\t\twhile (true)\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.DoLoopSleepErrorRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void SomeMethod()\r\n        {\r\n\t\t\tdo\r\n\t\t\t{\r\n\t\t\t}\r\n\t\t\twhile(true)\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.EmptyDoErrorRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void SomeMethod()\r\n        {\r\n\t\t\tdynamic myVariable = 2;\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.DynamicVariableRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void SomeMethod()\r\n        {\r\n\t\t\tgoto SomeLabel;\r\n\r\n\t\t\tswitch(x){\r\n\t\t\t\tcase \&amp;quot;a\&amp;quot;: return;\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.GotoStatementErrorRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void SomeMethod()\r\n        {\r\n\t\t\tpublic IServiceLocator ServiceLocator { get; set; }\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.LeakingServiceLocatorRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void SomeMethod()\r\n        {\r\n\t\t\tvar file = Directory.GetFiles(\&amp;quot;c:\\\&amp;quot;);\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.DirectoryClassDependency)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void SomeMethod()\r\n        {\r\n\t\t\tvar file = File.Create(\&amp;quot;c:\\blah.txt\&amp;quot;);\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.FileClassDependency)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void SomeMethod()\r\n        {\r\n\t\t\tvar name = MethodBase.GetCurrentMethod().Name;\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.ReflectionToResolveMethodNameRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void SomeMethod()\r\n        {\r\n\t\t\tvar time = DateTime.Now;\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.LocalTimeCreationRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void SomeMethod()\r\n        {\r\n\t\t\tvar unityContainer = ServiceLocator.Current.Resolve&amp;lt;IUnityContainer&amp;gt;();\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.ServiceLocatorResolvesContainerRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void SomeMethod()\r\n        {\r\n\t\t\tvar value = ServiceLocator.Current.Resolve&amp;lt;IMarkerInterface&amp;gt;();\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.ServiceLocatorInvocationRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void SomeMethod()\r\n        {\r\n\t\t\twhile(true)\r\n\t\t\t{\r\n\t\t\t\tif (DateTime.UtcNow.Millisecond == 500)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tThread.Sleep(100);\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.WhileLoopSleepErrorRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void SomeMethod()\r\n        {\r\n\t\t\twhile(true)\r\n\t\t\t{\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.EmptyWhileErrorRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void SomeMethod(MyClass x)\r\n        {\r\n\t\t\tobject value = null;\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.TypeObfuscationRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void SomeMethod(MyClass x)\r\n        {\r\n\t\t\tvar value = FirstLevel.SecondLevel.ThirdLevelMethod();\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.LawOfDemeterViolationRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;private void SomeMethod(object x)\r\n        {\r\n\t\t\tvar time = x == someMethod() &amp;amp;&amp;amp; a == b || b == c;\r\n\t\t\tif(x &amp;lt; y){\r\n\t\t\t\tif(x &amp;lt; y/2) {\r\n\t\t\t\t\tswitch(x.Value){\r\n\t\t\t\t\t\tcase \&amp;quot;a\&amp;quot;:\r\n\t\t\t\t\t\tcase \&amp;quot;b\&amp;quot;:\r\n\t\t\t\t\t\tcase \&amp;quot;c\&amp;quot;:\r\n\t\t\t\t\t\tcase \&amp;quot;d\&amp;quot;:\r\n\t\t\t\t\t\tcase \&amp;quot;e\&amp;quot;:\r\n\t\t\t\t\t\t\ty = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.TooHighCyclomaticComplexityRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;public class InnerClass : ICustomInterface\r\n\t\t{\r\n\t\t\tprivate object x = new object();\r\n\t\t\tprivate void SomeMethod()\r\n\t\t\t{\r\n\t\t\t\tGuard.Against(x == null);\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.GuardClauseInMethodWithoutParametersRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;public class InnerClass : ICustomInterface\r\n\t\t{\r\n\t\t\tprivate object x = new object();\r\n\t\t\tprivate void SomeMethod()\r\n\t\t\t{\r\n\t\t\t\tGuard.Against(x == null);\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.GuardClauseInNonPublicMethodRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;public class InnerClass : ICustomInterface\r\n\t\t{\r\n\t\t\tprivate void SomeMethod()\r\n\t\t\t{\r\n\t\t\t\tactivity.ArchiveSettings.NetworkLocation = @\&amp;quot;c:\\\&amp;quot;;\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.PublicInterfaceImplementationWarningRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;public class InnerClass : ICustomInterface\r\n\t\t{\r\n\t\t\tprivate void SomeMethod()\r\n\t\t\t{\r\n\t\t\t\tif(x &amp;gt; 1)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.MultipleReturnStatementsErrorRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;public class InnerClass : ICustomInterface\r\n\t\t{\r\n\t\t\tprivate void SomeMethod()\r\n\t\t\t{\r\n\t\t\t\tvar x = a ?? b;\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.CoalesceExpressionErrorRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;public class InnerClass : ICustomInterface\r\n\t\t{\r\n\t\t\tprivate void SomeMethod()\r\n\t\t\t{\r\n\t\t\t\tvar x = a &amp;gt; 1 ? \&amp;quot;a\&amp;quot; : \&amp;quot;b\&amp;quot;;\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.ConditionalExpressionErrorRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;public class InnerClass : ICustomInterface\r\n\t\t{\r\n\t\t\tprivate void SomeMethod()\r\n\t\t\t{\r\n\t\t\t\tvar x = GetValue();\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.VarDeclarationForNewVariableErrorRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;public class InnerClass : ICustomInterface\r\n\t\t{\r\n\t\t\tpublic const string SomeValue = \&amp;quot;Something\&amp;quot;;\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.NoPublicConstantRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;public class InnerClass\r\n\t\t{\r\n\t\t\tpublic DomainStorage Storage\r\n\t\t\t{\r\n\t\t\t\tget { return null; }\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.LeakingDomainStorageRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;public class InnerClass\r\n\t\t{\r\n\t\t\tpublic ISession Session\r\n\t\t\t{\r\n\t\t\t\tget { return null; }\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.LeakingSessionRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;UnitTestElement Provider="nUnit" Id="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest(&amp;quot;public class InnerClass\r\n\t\t{\r\n\t\t\tpublic UnityContainer Container\r\n\t\t\t{\r\n\t\t\t\tget { return null; }\r\n\t\t\t}\r\n\t\t}&amp;quot;,ArchiMeter.CodeReview.Rules.LeakingUnityContainerRule)" ParentId="ArchiMeter.CodeReview.Tests.Rules.SyntaxInspectorTests+GivenASyntaxInspectorInspectingBrokenCode.SyntaxDetectionTest" type="NUnitRowTestElement" /&gt;&lt;/Elements&gt;&lt;/Session&gt;</s:String>
	
	
	
	
	
	
	
	
	</wpf:ResourceDictionary>